---
# necessary project vars

project_root: ""
project_type: "default"
symfony_version: "4"
repo_git: ""
env: ""
branch: ""

db_host: ""
db_name: ""
db_user: ""
db_pass: ""

release: ~
php_path: php
github_token: ~
console_opts: ""
console_command: "bin/console"
config_dir: "app/config"
cache_command: cache:warmup

composer_path: /usr/local/bin/composer
composer_keep_updated: false
composer_version: ''

# The directory where global packages will be installed.
composer_home_path: '~/.composer'
composer_home_owner: root
composer_home_group: root

# A list of packages to install globally. See commented examples below for
# usage; the 'release' is optional, and defaults to '@stable'.
composer_global_packages: []
# - { name: phpunit/phpunit, release: "4.7.x" }
# - { name: phpunit/phpunit, release: "@stable" }

composer_add_to_path: true

# Add a project vendor/bin directory to the PATH
composer_add_project_to_path: false
# composer_project_path: /path/to/project/vendor/bin

# GitHub OAuth token (used to help overcome API rate limits).
composer_github_oauth_token: ''


enable_cache_warmup: True
schema_update: False
migrations: False
symlink_assets: True

redis_tcp: 'tcp://localhost:6379'
redis_requirepass: ''

# POSTRESQL
postgresql_version: 9.6
postgresql_admin_user: "postgres"
postgresql_default_auth_method: "trust"
postgresql_databases:
  - name: database
    owner: user          # optional; specify the owner of the database
    hstore: yes         # flag to install the hstore extension on this database (yes/no)
    uuid_ossp: yes      # flag to install the uuid-ossp extension on this database (yes/no)
    citext: yes         # flag to install the citext extension on this database (yes/no)
    encoding: 'UTF-8'   # override global {{ postgresql_encoding }} variable per database
    lc_collate: 'en_US.UTF-8'   # override global {{ postgresql_locale }} variable per database
    lc_ctype: 'en_US.UTF-8'     # override global {{ postgresql_ctype }} variable per database
postgresql_database_extensions:
  - db: database
    extensions:
      - hstore
      - citext
postgresql_users:
  - name: user
    pass: password
    encrypted: no
postgresql_user_privileges:
  - name: user          # user name
    db: user            # database
    priv: "ALL"                 # privilege string format: example: INSERT,UPDATE/table:SELECT/anothertable:ALL
    role_attr_flags: "CREATEDB" # role attribute flags

# SUPERVISOR
# For Python 3, use python3-pip.
pip_package: python-pip
pip_install_packages: []
# Install a specific version of Supervisor by setting it here (e.g. '3.3.1').
supervisor_version: latest

# Choose whether to use an init script or systemd unit configuration to start
# Supervisor when it's installed and/or after a system boot.
supervisor_started: true
supervisor_enabled: true

supervisor_config_path: /etc/supervisor

# A list of `program`s Supervisor will control. Example commented out below.
supervisor_programs: []
  # - name: 'apache'
  #   command: apache2ctl -c "ErrorLog /dev/stdout" -DFOREGROUND
  #   state: present
  #   configuration: |
  #     autostart=true
  #     autorestart=true
  #     startretries=1
  #     startsecs=1
  #     redirect_stderr=true
  #     stderr_logfile=/var/log/apache-err.log
  #     stdout_logfile=/var/log/apache-out.log
  #     user=root
  #     killasgroup=true
  #     stopasgroup=true

supervisor_nodaemon: false

supervisor_log_dir: /var/log/supervisor

supervisor_user: root
supervisor_password: 'my_secret_password'

supervisor_unix_http_server_enable: true
supervisor_unix_http_server_socket_path: /var/run/supervisor.sock

supervisor_inet_http_server_enable: false
supervisor_inet_http_server_port: '*:9001'
supervisor_bin_path: /usr/local/bin/supervisord